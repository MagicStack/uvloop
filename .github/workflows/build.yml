name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    env:
      CIBW_BUILD: cp3?-*
      CIBW_BEFORE_ALL: pip install Cython && make
      CIBW_BEFORE_BUILD: pip install Cython
      CIBW_BUILD_VERBOSITY: 2
      MACOSX_DEPLOYMENT_TARGET: "10.14"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.8'

    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel

    - name: Install autotools on MacOS
      run: |
        brew install automake
      if: runner.os == 'macOS'

    - name: Build wheels
      run: |
        python -m cibuildwheel --output-dir wheelhouse

    - uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.8'

    - name: Install Cython
      run: pip install Cython

    - name: Build sdist
      run: python setup.py sdist

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
        # to test:
        repository_url: https://test.pypi.org/legacy/
      if: >
        startsWith(github.ref, 'refs/tags/v')
